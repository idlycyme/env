#c example: /usr/share/doc/tmux/examples/
# {{{ screen-keys.conf
# $Id: screen-keys.conf,v 1.7 2010/07/31 11:39:13 nicm Exp $
#
# By Nicholas Marriott. Public domain.
#
# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.
#
# Note this is only a selection of key bindings and they are in addition to the
# normal tmux key bindings. This is intended as an example not as to be used
# as-is.

# for osx clipboard
# set -g default-command "reattach-to-user-namespace -l bash"

set -g default-terminal "screen-256color"

# Set that stupid Esc-wait off, so VI works again
set -sg escape-time 0

# Set the prefix to ^A.
unbind C-b
set -g prefix ^A
bind a send-prefix

# Bind appropriate commands similar to screen.
# lockscreen ^X x
unbind ^X
bind ^X lock-server
unbind x
bind x lock-server

# screen ^C c
unbind ^C
bind ^C new-window
unbind c
bind c new-window

# detach ^D d
unbind ^D
bind ^D detach

# displays *
unbind *
bind * list-clients

# next ^@ ^N sp n
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^A
unbind ^A
bind ^A last-window

# prev ^H ^P p ^?
unbind ^H
bind ^H previous-window
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# windows ^W w
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# quit \
unbind \
bind \ confirm-before "kill-server"

# kill K k
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# redisplay ^L l
unbind ^L
bind ^L refresh-client
unbind l
bind l refresh-client

# split -v |
unbind |
bind | split-window

# :kB: focus up
unbind Tab
bind Tab select-pane -t:.+
unbind BTab
bind BTab select-pane -t:.-

# " windowlist -b
unbind '"'
bind '"' choose-window

# }}}
# {{{ vim-keys.conf
# $Id: vim-keys.conf,v 1.2 2010/09/18 09:36:15 nicm Exp $
#
# vim-keys.conf, v1.2 2010/09/12
#
# By Daniel Thau.  Public domain.
#
# This configuration file binds many vi- and vim-like bindings to the
# appropriate tmux key bindings.  Note that for many key bindings there is no
# tmux analogue.  This is intended for tmux 1.3, which handles pane selection
# differently from the previous versions

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h


# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 5
bind > resize-pane -R 5
bind - resize-pane -D 5
bind + resize-pane -U 5

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# copy mode
# unbind [
# bind Escape copy-mode

# vi-style controls for copy mode
setw -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
# }}}

# set mouse select pane on
set -g mouse-select-pane on

# mouse can be used to select windows(by clicking in state bar)
set -g mouse-select-window on

# mouse can be used to resize panes(by dragging dividers)
set -g mouse-resize-pane on

# not really sure what this does, but with it, the scrollwheel works inside vim
set -g mouse-utf8 on

# allow mouse to enter copy mode and initiate selection
setw -g mode-mouse on


# Toggle mouse on with ^B m
bind m \
  set -g mode-mouse on \;\
  set -g mouse-resize-pane on \;\
  set -g mouse-select-pane on \;\
  set -g mouse-select-window on \;\
  display 'Mouse: ON'

# Toggle mouse off with ^B M
bind M \
  set -g mode-mouse off \;\
  set -g mouse-resize-pane off \;\
  set -g mouse-select-pane off \;\
  set -g mouse-select-window off \;\
  display 'Mouse: OFF'

# set -g default-terminal "screen-256color" # + "tmux -2" => 256 color

#### COLOUR

# default statusbar colors
#set-option -g status-bg colour075 #v
set-option -g status-bg colour189 #v
set-option -g status-fg colour103 #v
set-option -g status-attr default
# set -g status-left-length 20
set -g status-left '#S' # session-name

# default window title colors
set-window-option -g window-status-fg colour249 #v
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour015 #v
set-window-option -g window-status-current-bg default
##set-window-option -g window-status-current-attr bright
#
## pane border
set-option -g pane-border-fg colour189 #v
set-option -g pane-active-border-fg colour152 #v

## message text (like rename window)
set-option -g message-bg colour141 #v
set-option -g message-fg colour231 #v

## pane number display (like hostname)
#set-option -g display-panes-active-colour colour82 #v
set-option -g display-panes-active-colour colour189 #blue
set-option -g display-panes-colour colour153 #orange

## clock
set-window-option -g clock-mode-colour colour153 #green

# set start index
set -g base-index 1

# force to reload the config file
unbind r
bind r source-file ~/.tmux.conf; display "Realod Config: ~/tmux.conf"

